name: deploy order service to AWS Fargate

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
    
  workflow_dispatch: # to manually run workflow
    
jobs:
  provision-infra:
    runs-on:
      ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: determine environment
        run: |
          if [ ${{ github.ref }} == 'refs/heads/master' ]; then
          echo "role=arn:aws:iam::183295410578:role/github-actions-cloudformation-deploy-role" >> $GITHUB_ENV
          elif [ ${{ github.ref }} == 'refs/heads/dev' ]; then
          echo "role=arn:aws:iam::123:role/github-actions-cloudformation-deploy-role" >> $GITHUB_ENV
          echo Role $ {{ env.role }}
          fi
      
      - name: configure AWS credentials
        id: credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.role}}
          role-session-name: DeployInfra
          aws-region: us-east-1
          
      - name: get account id
        run: |
          echo ${{ steps.credentials.outputs.aws-account-id }}
          
      - name: deploy infra
        id: infra
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: infrastructure
          template: cloudformation-templates/infrastructure.yml
          role-arn: arn:aws:iam::${{ steps.credentials.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
          no-fail-on-empty-changeset: "1"
          
      - name: deploy IAM roles
        id: iam
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: IAMROLES
          template: cloudformation-templates/iam.yml
          role-arn: arn:aws:iam::${{ steps.credentials.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
          no-fail-on-empty-changeset: "1"
          
      - name: deploy ECS cluster
        id: cluster
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ecs-cluster
          template: cloudformation-templates/app-cluster.yml
          role-arn: arn:aws:iam::${{ steps.credentials.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
          no-fail-on-empty-changeset: "1"
          
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build and package Java application
        run: mvn clean package
        
      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Java application image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: order-service
          IMAGE_TAG: order-service-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          #echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          IMAGE_PARAM="image=${{ steps.build-image.outputs.image }}"
          echo "params=$PARAMS,$IMAGE_PARAM",$ENV_NAME >> $GITHUB_OUTPUT
          
          
      - name: deploy service
        id: service
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: service
          template: cloudformation-templates/api.yml
          role-arn: arn:aws:iam::${{ steps.credentials.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
          no-fail-on-empty-changeset: "1"